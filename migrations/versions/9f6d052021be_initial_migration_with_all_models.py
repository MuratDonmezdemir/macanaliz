"""Initial migration with all models

Revision ID: 9f6d052021be
Revises: 
Create Date: 2025-06-11 16:59:57.923920

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Text

# revision identifiers, used by Alembic.
revision = "9f6d052021be"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("leagues", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "short_name",
                sa.String(length=50),
                nullable=False,
                comment="Ligin kısa adı (Örn: SL, EPL)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "level",
                sa.Enum(
                    "TOP",
                    "SECOND",
                    "THIRD",
                    "FOURTH",
                    "CUP",
                    "INTERNATIONAL",
                    name="leaguelevel",
                ),
                nullable=False,
                comment="Lig seviyesi (top, second, third, fourth, cup, international)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "type",
                sa.Enum(
                    "LEAGUE", "CUP", "QUALIFICATION", "FRIENDLY", name="leaguetype"
                ),
                nullable=False,
                comment="Lig türü (league, cup, qualification, friendly)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "country_code",
                sa.String(length=3),
                nullable=False,
                comment="Ülke kodu (Örn: TUR, ENG, ESP)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "flag", sa.String(length=255), nullable=True, comment="Ülke bayrağı URL"
            )
        )
        batch_op.add_column(
            sa.Column(
                "current_season_id",
                sa.Integer(),
                nullable=True,
                comment="Güncel sezon ID'si",
            )
        )
        batch_op.add_column(
            sa.Column(
                "current_round",
                sa.String(length=50),
                nullable=True,
                comment="Güncel hafta/tur bilgisi",
            )
        )
        batch_op.add_column(
            sa.Column(
                "number_of_teams",
                sa.Integer(),
                nullable=False,
                comment="Toplam takım sayısı",
            )
        )
        batch_op.add_column(
            sa.Column(
                "number_of_games",
                sa.Integer(),
                nullable=False,
                comment="Toplam maç sayısı",
            )
        )
        batch_op.add_column(
            sa.Column(
                "external_ids",
                sa.JSON(),
                nullable=True,
                comment="Harici API'lardaki ID'ler (Örn: {'api_football': 39, 'soccerway': 22})",
            )
        )
        batch_op.add_column(
            sa.Column("is_cup", sa.Boolean(), nullable=True, comment="Kupa mı?")
        )
        batch_op.alter_column(
            "country", existing_type=sa.VARCHAR(length=50), nullable=False
        )
        batch_op.alter_column(
            "logo",
            existing_type=sa.VARCHAR(length=200),
            type_=sa.String(length=255),
            existing_nullable=True,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.create_index("idx_leagues_code", ["code"], unique=False)
        batch_op.create_index("idx_leagues_country", ["country"], unique=False)
        batch_op.create_index(
            "idx_leagues_country_code", ["country_code"], unique=False
        )
        batch_op.create_index("idx_leagues_is_active", ["is_active"], unique=False)
        batch_op.create_index("idx_leagues_level", ["level"], unique=False)
        batch_op.create_index("idx_leagues_name", ["name"], unique=False)
        batch_op.create_index("idx_leagues_short_name", ["short_name"], unique=False)
        batch_op.create_index("idx_leagues_type", ["type"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_leagues_is_active"), ["is_active"], unique=False
        )
        batch_op.create_unique_constraint("uq_league_code", ["code"])
        batch_op.create_unique_constraint(
            "uq_league_name_country", ["name", "country_code"]
        )
        batch_op.create_foreign_key(
            None, "seasons", ["current_season_id"], ["id"], ondelete="SET NULL"
        )
        batch_op.drop_column("current_champion")
        batch_op.drop_column("season")
        batch_op.drop_column("founded")

    with op.batch_alter_table("matches", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("league_id", sa.Integer(), nullable=False, comment="Lig ID")
        )
        batch_op.add_column(
            sa.Column(
                "match_datetime",
                sa.DateTime(),
                nullable=False,
                comment="Maç tarihi ve saati",
            )
        )
        batch_op.add_column(
            sa.Column(
                "group",
                sa.String(length=10),
                nullable=True,
                comment="Grup aşamasındaki grup adı (A, B, C, vb.)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "round",
                sa.String(length=50),
                nullable=True,
                comment="Tur bilgisi (1. Tur, Çeyrek Final, Yarı Final, Final, vb.)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "home_goals",
                sa.Integer(),
                nullable=True,
                comment="Ev sahibi takımın gol sayısı",
            )
        )
        batch_op.add_column(
            sa.Column(
                "away_goals",
                sa.Integer(),
                nullable=True,
                comment="Deplasman takımının gol sayısı",
            )
        )
        batch_op.add_column(
            sa.Column(
                "half_time_home_goals",
                sa.Integer(),
                nullable=True,
                comment="İlk yarı ev sahibi takım golleri",
            )
        )
        batch_op.add_column(
            sa.Column(
                "half_time_away_goals",
                sa.Integer(),
                nullable=True,
                comment="İlk yarı deplasman takımı golleri",
            )
        )
        batch_op.add_column(
            sa.Column(
                "full_time_home_goals",
                sa.Integer(),
                nullable=True,
                comment="Normal süre ev sahibi takım golleri (uzatmalar hariç)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "full_time_away_goals",
                sa.Integer(),
                nullable=True,
                comment="Normal süre deplasman takımı golleri (uzatmalar hariç)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "extra_time_home_goals",
                sa.Integer(),
                nullable=True,
                comment="Uzatma süresi ev sahibi takım golleri",
            )
        )
        batch_op.add_column(
            sa.Column(
                "extra_time_away_goals",
                sa.Integer(),
                nullable=True,
                comment="Uzatma süresi deplasman takımı golleri",
            )
        )
        batch_op.add_column(
            sa.Column(
                "penalty_home_goals",
                sa.Integer(),
                nullable=True,
                comment="Penaltı atışları ev sahibi takım golleri",
            )
        )
        batch_op.add_column(
            sa.Column(
                "penalty_away_goals",
                sa.Integer(),
                nullable=True,
                comment="Penaltı atışları deplasman takımı golleri",
            )
        )
        batch_op.add_column(
            sa.Column(
                "statistics",
                sa.JSON(),
                nullable=True,
                comment="Maç istatistikleri (şut, pas, top hakimiyeti vb.)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "events",
                sa.JSON(),
                nullable=True,
                comment="[DEPRECATED] Maç olayları (yeni yapıda match_events tablosu kullanılacak)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "referee_name",
                sa.String(length=100),
                nullable=True,
                comment="Hakem adı (eski sürüm uyumluluğu için)",
            )
        )
        batch_op.add_column(
            sa.Column("referee_id", sa.Integer(), nullable=True, comment="Hakem ID")
        )
        batch_op.add_column(
            sa.Column(
                "venue", sa.String(length=100), nullable=True, comment="Stadyum adı"
            )
        )
        batch_op.add_column(
            sa.Column("venue_id", sa.Integer(), nullable=True, comment="Stadyum ID")
        )
        batch_op.add_column(
            sa.Column(
                "venue_city",
                sa.String(length=100),
                nullable=True,
                comment="Stadyum şehri",
            )
        )
        batch_op.add_column(
            sa.Column(
                "external_ids",
                sa.JSON(),
                nullable=True,
                comment="Harici API'lar için ID'ler: {api_name: id}",
            )
        )
        batch_op.alter_column(
            "status",
            existing_type=sa.VARCHAR(length=20),
            type_=sa.Enum(
                "SCHEDULED",
                "LIVE",
                "HALF_TIME",
                "EXTRA_TIME",
                "PENALTIES",
                "FINISHED",
                "POSTPONED",
                "SUSPENDED",
                "CANCELED",
                "AWARDED",
                name="matchstatus",
            ),
            existing_nullable=False,
        )
        batch_op.drop_index("ix_matches_match_date")
        batch_op.create_index("idx_matches_away_team", ["away_team_id"], unique=False)
        batch_op.create_index("idx_matches_datetime", ["match_datetime"], unique=False)
        batch_op.create_index("idx_matches_home_team", ["home_team_id"], unique=False)
        batch_op.create_index("idx_matches_league", ["league_id"], unique=False)
        batch_op.create_index("idx_matches_round", ["round"], unique=False)
        batch_op.create_index("idx_matches_season", ["season_id"], unique=False)
        batch_op.create_index("idx_matches_status", ["status"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_matches_away_team_id"), ["away_team_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_matches_home_team_id"), ["home_team_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_matches_league_id"), ["league_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_matches_match_datetime"), ["match_datetime"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_matches_referee_id"), ["referee_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_matches_season_id"), ["season_id"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_matches_status"), ["status"], unique=False)
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            None, "leagues", ["league_id"], ["id"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "referees", ["referee_id"], ["id"], ondelete="SET NULL"
        )
        batch_op.create_foreign_key(None, "stadiums", ["venue_id"], ["id"])
        batch_op.drop_column("extra_time_home_score")
        batch_op.drop_column("stadium_id")
        batch_op.drop_column("away_score")
        batch_op.drop_column("attendance")
        batch_op.drop_column("half_time_away_score")
        batch_op.drop_column("referee")
        batch_op.drop_column("penalty_away_score")
        batch_op.drop_column("extra_time_away_score")
        batch_op.drop_column("match_date")
        batch_op.drop_column("home_score")
        batch_op.drop_column("created_at")
        batch_op.drop_column("half_time_home_score")
        batch_op.drop_column("penalty_home_score")
        batch_op.drop_column("updated_at")

    with op.batch_alter_table("players", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("first_name", sa.String(length=50), nullable=False)
        )
        batch_op.add_column(
            sa.Column("last_name", sa.String(length=50), nullable=False)
        )
        batch_op.add_column(
            sa.Column("full_name", sa.String(length=120), nullable=True)
        )
        batch_op.add_column(
            sa.Column("short_name", sa.String(length=30), nullable=True)
        )
        batch_op.add_column(
            sa.Column("place_of_birth", sa.String(length=100), nullable=True)
        )
        batch_op.add_column(sa.Column("country", sa.String(length=2), nullable=False))
        batch_op.add_column(
            sa.Column("second_nationality", sa.String(length=50), nullable=True)
        )
        batch_op.add_column(
            sa.Column(
                "foot",
                sa.Enum("RIGHT", "LEFT", "BOTH", name="playerfoot"),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "positions",
                postgresql.ARRAY(
                    Enum(
                        "GOALKEEPER",
                        "DEFENDER",
                        "MIDFIELDER",
                        "FORWARD",
                        name="playerposition",
                    )
                ),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "preferred_position",
                sa.Enum(
                    "GOALKEEPER",
                    "DEFENDER",
                    "MIDFIELDER",
                    "FORWARD",
                    name="playerposition",
                ),
                nullable=True,
            )
        )
        batch_op.add_column(sa.Column("contract_start", sa.Date(), nullable=True))
        batch_op.add_column(sa.Column("contract_end", sa.Date(), nullable=True))
        batch_op.add_column(
            sa.Column("market_value", sa.Numeric(precision=12, scale=2), nullable=True)
        )
        batch_op.add_column(
            sa.Column("market_value_currency", sa.String(length=3), nullable=True)
        )
        batch_op.add_column(
            sa.Column("market_value_last_update", sa.DateTime(), nullable=True)
        )
        batch_op.add_column(
            sa.Column("image_url", sa.String(length=255), nullable=True)
        )
        batch_op.add_column(
            sa.Column("thumbnail_url", sa.String(length=255), nullable=True)
        )
        batch_op.add_column(
            sa.Column(
                "social_media", postgresql.JSON(astext_type=Text()), nullable=True
            )
        )
        batch_op.add_column(
            sa.Column(
                "status",
                sa.Enum(
                    "ACTIVE",
                    "INJURED",
                    "SUSPENDED",
                    "LOANED",
                    "TRANSFERRED",
                    "RETIRED",
                    name="playerstatus",
                ),
                nullable=False,
            )
        )
        batch_op.add_column(sa.Column("is_injured", sa.Boolean(), nullable=True))
        batch_op.add_column(
            sa.Column(
                "injury_details", postgresql.JSON(astext_type=Text()), nullable=True
            )
        )
        batch_op.add_column(sa.Column("last_updated", sa.DateTime(), nullable=True))
        batch_op.alter_column("date_of_birth", existing_type=sa.DATE(), nullable=False)
        batch_op.alter_column(
            "position",
            existing_type=sa.VARCHAR(length=5),
            type_=sa.Enum(
                "GOALKEEPER", "DEFENDER", "MIDFIELDER", "FORWARD", name="playerposition"
            ),
            nullable=False,
        )
        batch_op.drop_index("ix_players_name")
        batch_op.create_index(
            batch_op.f("ix_players_date_of_birth"), ["date_of_birth"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_players_first_name"), ["first_name"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_players_full_name"), ["full_name"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_players_is_active"), ["is_active"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_players_last_name"), ["last_name"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_players_team_id"), ["team_id"], unique=False
        )
        batch_op.drop_column("name")

    with op.batch_alter_table("predictions", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("model_version", sa.String(length=50), nullable=False)
        )
        batch_op.add_column(sa.Column("home_win_prob", sa.Float(), nullable=False))
        batch_op.add_column(sa.Column("draw_prob", sa.Float(), nullable=False))
        batch_op.add_column(sa.Column("away_win_prob", sa.Float(), nullable=False))
        batch_op.add_column(sa.Column("over_2_5_prob", sa.Float(), nullable=True))
        batch_op.add_column(sa.Column("btts_prob", sa.Float(), nullable=True))
        batch_op.add_column(sa.Column("home_ht_goals", sa.Float(), nullable=True))
        batch_op.add_column(sa.Column("away_ht_goals", sa.Float(), nullable=True))
        batch_op.add_column(sa.Column("confidence", sa.Float(), nullable=True))
        batch_op.add_column(sa.Column("features_used", sa.JSON(), nullable=True))
        batch_op.alter_column(
            "home_goals",
            existing_type=sa.INTEGER(),
            type_=sa.Float(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "away_goals",
            existing_type=sa.INTEGER(),
            type_=sa.Float(),
            existing_nullable=False,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.create_index(
            batch_op.f("ix_predictions_match_id"), ["match_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_predictions_user_id"), ["user_id"], unique=False
        )
        batch_op.drop_column("points_earned")
        batch_op.drop_column("is_correct")

    with op.batch_alter_table("seasons", schema=None) as batch_op:
        batch_op.alter_column("league_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            None, "leagues", ["league_id"], ["id"], ondelete="CASCADE"
        )

    with op.batch_alter_table("standings", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("league_id", sa.Integer(), nullable=False, comment="Lig ID")
        )
        batch_op.alter_column("played", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("won", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("drawn", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("lost", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("goals_for", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column(
            "goals_against", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.alter_column(
            "goal_difference", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.alter_column("points", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.create_index(
            "idx_standings_league_season", ["league_id", "season_id"], unique=False
        )
        batch_op.create_index("idx_standings_position", ["position"], unique=False)
        batch_op.create_index("idx_standings_season", ["season_id"], unique=False)
        batch_op.create_index(
            "idx_standings_team_league_season",
            ["team_id", "league_id", "season_id"],
            unique=False,
        )
        batch_op.create_unique_constraint(
            "uq_standing_team_league_season", ["team_id", "league_id", "season_id"]
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            None, "seasons", ["season_id"], ["id"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "leagues", ["league_id"], ["id"], ondelete="CASCADE"
        )
        batch_op.create_foreign_key(
            None, "teams", ["team_id"], ["id"], ondelete="CASCADE"
        )

    with op.batch_alter_table("teams", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "code",
                sa.String(length=3),
                nullable=False,
                comment="3 harfli kısaltma (örn: GAL)",
            )
        )
        batch_op.add_column(
            sa.Column("tff_id", sa.Integer(), nullable=True, comment="TFF takım ID'si")
        )
        batch_op.add_column(
            sa.Column(
                "country_code",
                sa.String(length=3),
                nullable=True,
                comment="Ülke kodu (örn: TUR)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "status",
                sa.Enum("ACTIVE", "INACTIVE", "BANNED", name="teamstatus"),
                nullable=False,
                comment="Takımın durumu (AKTİF/PASİF/FESHEDİLDİ)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "team_type",
                sa.Enum("CLUB", "NATIONAL", name="teamtype"),
                nullable=False,
                comment="Takım türü (KULÜP/MİLLİ TAKIM/AKADEMİ)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "gender",
                sa.Enum("MALE", "FEMALE", "MIXED", name="teamgender"),
                nullable=False,
                comment="Takım cinsiyeti (ERKEK/KADIN/KARMA)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "email",
                sa.String(length=100),
                nullable=True,
                comment="İletişim e-posta adresi",
            )
        )
        batch_op.add_column(
            sa.Column(
                "phone",
                sa.String(length=20),
                nullable=True,
                comment="İletişim telefonu",
            )
        )
        batch_op.add_column(
            sa.Column("address", sa.Text(), nullable=True, comment="Fiziksel adres")
        )
        batch_op.add_column(
            sa.Column(
                "nickname",
                sa.String(length=50),
                nullable=True,
                comment="Takımın lakabı (örn: Aslanlar, Cimbom)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "description",
                sa.Text(),
                nullable=True,
                comment="Takım hakkında detaylı açıklama",
            )
        )
        batch_op.add_column(
            sa.Column(
                "budget",
                sa.Numeric(precision=15, scale=2),
                nullable=False,
                comment="Yıllık bütçe (EUR)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "market_value",
                sa.Numeric(precision=15, scale=2),
                nullable=False,
                comment="Piyasa değeri (EUR)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "average_age",
                sa.Float(),
                nullable=True,
                comment="Takımın yaş ortalaması",
            )
        )
        batch_op.add_column(
            sa.Column(
                "foreign_players",
                sa.Integer(),
                nullable=False,
                comment="Yabancı oyuncu sayısı",
            )
        )
        batch_op.add_column(
            sa.Column(
                "formation",
                sa.Enum(
                    "FORMATION_442",
                    "FORMATION_433",
                    "FORMATION_352",
                    "FORMATION_343",
                    "FORMATION_4231",
                    "FORMATION_532",
                    "FORMATION_541",
                    name="teamformation",
                ),
                nullable=False,
                comment="Varsayılan oyun dizilişi",
            )
        )
        batch_op.add_column(
            sa.Column(
                "social_media",
                sa.JSON(),
                nullable=True,
                comment="Sosyal medya hesapları (JSON formatında)",
            )
        )
        batch_op.add_column(
            sa.Column(
                "trophies",
                sa.JSON(),
                nullable=True,
                comment="Kupa kazanımları (JSON formatında)",
            )
        )
        batch_op.alter_column(
            "short_name", existing_type=sa.VARCHAR(length=20), nullable=False
        )
        batch_op.alter_column(
            "country", existing_type=sa.VARCHAR(length=50), nullable=False
        )
        batch_op.alter_column(
            "logo",
            existing_type=sa.VARCHAR(length=200),
            type_=sa.String(length=255),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "website",
            existing_type=sa.VARCHAR(length=200),
            type_=sa.String(length=100),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "colors",
            existing_type=sa.VARCHAR(length=100),
            type_=sa.JSON(),
            existing_nullable=True,
        )
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=False)
        batch_op.create_index("idx_teams_city", ["city"], unique=False)
        batch_op.create_index("idx_teams_code", ["code"], unique=False)
        batch_op.create_index("idx_teams_country", ["country"], unique=False)
        batch_op.create_index("idx_teams_league", ["league_id"], unique=False)
        batch_op.create_index("idx_teams_name", ["name"], unique=False)
        batch_op.create_index("idx_teams_short_name", ["short_name"], unique=False)
        batch_op.create_index("idx_teams_stadium", ["stadium_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_teams_country"), ["country"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_teams_country_code"), ["country_code"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_teams_league_id"), ["league_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_teams_stadium_id"), ["stadium_id"], unique=False
        )
        batch_op.create_unique_constraint("uq_team_code", ["code"])
        batch_op.create_unique_constraint("uq_team_name_country", ["name", "country"])
        batch_op.create_unique_constraint(None, ["tff_id"])
        batch_op.create_unique_constraint(None, ["code"])
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            None, "leagues", ["league_id"], ["id"], ondelete="SET NULL"
        )
        batch_op.create_foreign_key(
            None, "stadiums", ["stadium_id"], ["id"], ondelete="SET NULL"
        )
        batch_op.drop_column("coach")
        batch_op.drop_column("is_national")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("teams", schema=None) as batch_op:
        batch_op.add_column(sa.Column("is_national", sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column("coach", sa.VARCHAR(length=100), nullable=True))
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(None, "leagues", ["league_id"], ["id"])
        batch_op.create_foreign_key(None, "stadiums", ["stadium_id"], ["id"])
        batch_op.drop_constraint(None, type_="unique")
        batch_op.drop_constraint(None, type_="unique")
        batch_op.drop_constraint("uq_team_name_country", type_="unique")
        batch_op.drop_constraint("uq_team_code", type_="unique")
        batch_op.drop_index(batch_op.f("ix_teams_stadium_id"))
        batch_op.drop_index(batch_op.f("ix_teams_league_id"))
        batch_op.drop_index(batch_op.f("ix_teams_country_code"))
        batch_op.drop_index(batch_op.f("ix_teams_country"))
        batch_op.drop_index("idx_teams_stadium")
        batch_op.drop_index("idx_teams_short_name")
        batch_op.drop_index("idx_teams_name")
        batch_op.drop_index("idx_teams_league")
        batch_op.drop_index("idx_teams_country")
        batch_op.drop_index("idx_teams_code")
        batch_op.drop_index("idx_teams_city")
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "colors",
            existing_type=sa.JSON(),
            type_=sa.VARCHAR(length=100),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "website",
            existing_type=sa.String(length=100),
            type_=sa.VARCHAR(length=200),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "logo",
            existing_type=sa.String(length=255),
            type_=sa.VARCHAR(length=200),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "country", existing_type=sa.VARCHAR(length=50), nullable=True
        )
        batch_op.alter_column(
            "short_name", existing_type=sa.VARCHAR(length=20), nullable=True
        )
        batch_op.drop_column("trophies")
        batch_op.drop_column("social_media")
        batch_op.drop_column("formation")
        batch_op.drop_column("foreign_players")
        batch_op.drop_column("average_age")
        batch_op.drop_column("market_value")
        batch_op.drop_column("budget")
        batch_op.drop_column("description")
        batch_op.drop_column("nickname")
        batch_op.drop_column("address")
        batch_op.drop_column("phone")
        batch_op.drop_column("email")
        batch_op.drop_column("gender")
        batch_op.drop_column("team_type")
        batch_op.drop_column("status")
        batch_op.drop_column("country_code")
        batch_op.drop_column("tff_id")
        batch_op.drop_column("code")

    with op.batch_alter_table("standings", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(None, "teams", ["team_id"], ["id"])
        batch_op.create_foreign_key(None, "seasons", ["season_id"], ["id"])
        batch_op.drop_constraint("uq_standing_team_league_season", type_="unique")
        batch_op.drop_index("idx_standings_team_league_season")
        batch_op.drop_index("idx_standings_season")
        batch_op.drop_index("idx_standings_position")
        batch_op.drop_index("idx_standings_league_season")
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("points", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column(
            "goal_difference", existing_type=sa.INTEGER(), nullable=True
        )
        batch_op.alter_column(
            "goals_against", existing_type=sa.INTEGER(), nullable=True
        )
        batch_op.alter_column("goals_for", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("lost", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("drawn", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("won", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("played", existing_type=sa.INTEGER(), nullable=True)
        batch_op.drop_column("league_id")

    with op.batch_alter_table("seasons", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(None, "leagues", ["league_id"], ["id"])
        batch_op.alter_column("league_id", existing_type=sa.INTEGER(), nullable=True)

    with op.batch_alter_table("predictions", schema=None) as batch_op:
        batch_op.add_column(sa.Column("is_correct", sa.BOOLEAN(), nullable=True))
        batch_op.add_column(sa.Column("points_earned", sa.INTEGER(), nullable=True))
        batch_op.drop_index(batch_op.f("ix_predictions_user_id"))
        batch_op.drop_index(batch_op.f("ix_predictions_match_id"))
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "away_goals",
            existing_type=sa.Float(),
            type_=sa.INTEGER(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "home_goals",
            existing_type=sa.Float(),
            type_=sa.INTEGER(),
            existing_nullable=False,
        )
        batch_op.drop_column("features_used")
        batch_op.drop_column("confidence")
        batch_op.drop_column("away_ht_goals")
        batch_op.drop_column("home_ht_goals")
        batch_op.drop_column("btts_prob")
        batch_op.drop_column("over_2_5_prob")
        batch_op.drop_column("away_win_prob")
        batch_op.drop_column("draw_prob")
        batch_op.drop_column("home_win_prob")
        batch_op.drop_column("model_version")

    with op.batch_alter_table("players", schema=None) as batch_op:
        batch_op.add_column(sa.Column("name", sa.VARCHAR(length=100), nullable=False))
        batch_op.drop_index(batch_op.f("ix_players_team_id"))
        batch_op.drop_index(batch_op.f("ix_players_last_name"))
        batch_op.drop_index(batch_op.f("ix_players_is_active"))
        batch_op.drop_index(batch_op.f("ix_players_full_name"))
        batch_op.drop_index(batch_op.f("ix_players_first_name"))
        batch_op.drop_index(batch_op.f("ix_players_date_of_birth"))
        batch_op.create_index("ix_players_name", ["name"], unique=False)
        batch_op.alter_column(
            "position",
            existing_type=sa.Enum(
                "GOALKEEPER", "DEFENDER", "MIDFIELDER", "FORWARD", name="playerposition"
            ),
            type_=sa.VARCHAR(length=5),
            nullable=True,
        )
        batch_op.alter_column("date_of_birth", existing_type=sa.DATE(), nullable=True)
        batch_op.drop_column("last_updated")
        batch_op.drop_column("injury_details")
        batch_op.drop_column("is_injured")
        batch_op.drop_column("status")
        batch_op.drop_column("social_media")
        batch_op.drop_column("thumbnail_url")
        batch_op.drop_column("image_url")
        batch_op.drop_column("market_value_last_update")
        batch_op.drop_column("market_value_currency")
        batch_op.drop_column("market_value")
        batch_op.drop_column("contract_end")
        batch_op.drop_column("contract_start")
        batch_op.drop_column("preferred_position")
        batch_op.drop_column("positions")
        batch_op.drop_column("foot")
        batch_op.drop_column("second_nationality")
        batch_op.drop_column("country")
        batch_op.drop_column("place_of_birth")
        batch_op.drop_column("short_name")
        batch_op.drop_column("full_name")
        batch_op.drop_column("last_name")
        batch_op.drop_column("first_name")

    with op.batch_alter_table("matches", schema=None) as batch_op:
        batch_op.add_column(sa.Column("updated_at", sa.DATETIME(), nullable=False))
        batch_op.add_column(
            sa.Column("penalty_home_score", sa.INTEGER(), nullable=True)
        )
        batch_op.add_column(
            sa.Column("half_time_home_score", sa.INTEGER(), nullable=True)
        )
        batch_op.add_column(sa.Column("created_at", sa.DATETIME(), nullable=False))
        batch_op.add_column(sa.Column("home_score", sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column("match_date", sa.DATETIME(), nullable=False))
        batch_op.add_column(
            sa.Column("extra_time_away_score", sa.INTEGER(), nullable=True)
        )
        batch_op.add_column(
            sa.Column("penalty_away_score", sa.INTEGER(), nullable=True)
        )
        batch_op.add_column(sa.Column("referee", sa.VARCHAR(length=100), nullable=True))
        batch_op.add_column(
            sa.Column("half_time_away_score", sa.INTEGER(), nullable=True)
        )
        batch_op.add_column(sa.Column("attendance", sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column("away_score", sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column("stadium_id", sa.INTEGER(), nullable=True))
        batch_op.add_column(
            sa.Column("extra_time_home_score", sa.INTEGER(), nullable=True)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(None, "stadiums", ["stadium_id"], ["id"])
        batch_op.drop_index(batch_op.f("ix_matches_status"))
        batch_op.drop_index(batch_op.f("ix_matches_season_id"))
        batch_op.drop_index(batch_op.f("ix_matches_referee_id"))
        batch_op.drop_index(batch_op.f("ix_matches_match_datetime"))
        batch_op.drop_index(batch_op.f("ix_matches_league_id"))
        batch_op.drop_index(batch_op.f("ix_matches_home_team_id"))
        batch_op.drop_index(batch_op.f("ix_matches_away_team_id"))
        batch_op.drop_index("idx_matches_status")
        batch_op.drop_index("idx_matches_season")
        batch_op.drop_index("idx_matches_round")
        batch_op.drop_index("idx_matches_league")
        batch_op.drop_index("idx_matches_home_team")
        batch_op.drop_index("idx_matches_datetime")
        batch_op.drop_index("idx_matches_away_team")
        batch_op.create_index("ix_matches_match_date", ["match_date"], unique=False)
        batch_op.alter_column(
            "status",
            existing_type=sa.Enum(
                "SCHEDULED",
                "LIVE",
                "HALF_TIME",
                "EXTRA_TIME",
                "PENALTIES",
                "FINISHED",
                "POSTPONED",
                "SUSPENDED",
                "CANCELED",
                "AWARDED",
                name="matchstatus",
            ),
            type_=sa.VARCHAR(length=20),
            existing_nullable=False,
        )
        batch_op.drop_column("external_ids")
        batch_op.drop_column("venue_city")
        batch_op.drop_column("venue_id")
        batch_op.drop_column("venue")
        batch_op.drop_column("referee_id")
        batch_op.drop_column("referee_name")
        batch_op.drop_column("events")
        batch_op.drop_column("statistics")
        batch_op.drop_column("penalty_away_goals")
        batch_op.drop_column("penalty_home_goals")
        batch_op.drop_column("extra_time_away_goals")
        batch_op.drop_column("extra_time_home_goals")
        batch_op.drop_column("full_time_away_goals")
        batch_op.drop_column("full_time_home_goals")
        batch_op.drop_column("half_time_away_goals")
        batch_op.drop_column("half_time_home_goals")
        batch_op.drop_column("away_goals")
        batch_op.drop_column("home_goals")
        batch_op.drop_column("round")
        batch_op.drop_column("group")
        batch_op.drop_column("match_datetime")
        batch_op.drop_column("league_id")

    with op.batch_alter_table("leagues", schema=None) as batch_op:
        batch_op.add_column(sa.Column("founded", sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column("season", sa.VARCHAR(length=20), nullable=True))
        batch_op.add_column(
            sa.Column("current_champion", sa.VARCHAR(length=100), nullable=True)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint("uq_league_name_country", type_="unique")
        batch_op.drop_constraint("uq_league_code", type_="unique")
        batch_op.drop_index(batch_op.f("ix_leagues_is_active"))
        batch_op.drop_index("idx_leagues_type")
        batch_op.drop_index("idx_leagues_short_name")
        batch_op.drop_index("idx_leagues_name")
        batch_op.drop_index("idx_leagues_level")
        batch_op.drop_index("idx_leagues_is_active")
        batch_op.drop_index("idx_leagues_country_code")
        batch_op.drop_index("idx_leagues_country")
        batch_op.drop_index("idx_leagues_code")
        batch_op.alter_column("updated_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column("created_at", existing_type=sa.DATETIME(), nullable=True)
        batch_op.alter_column(
            "logo",
            existing_type=sa.String(length=255),
            type_=sa.VARCHAR(length=200),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "country", existing_type=sa.VARCHAR(length=50), nullable=True
        )
        batch_op.drop_column("is_cup")
        batch_op.drop_column("external_ids")
        batch_op.drop_column("number_of_games")
        batch_op.drop_column("number_of_teams")
        batch_op.drop_column("current_round")
        batch_op.drop_column("current_season_id")
        batch_op.drop_column("flag")
        batch_op.drop_column("country_code")
        batch_op.drop_column("type")
        batch_op.drop_column("level")
        batch_op.drop_column("short_name")

    # ### end Alembic commands ###
